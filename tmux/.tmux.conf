# Create a new cgroup for each window
set-option -g default-command 'systemd-run --user --scope /usr/bin/zsh'

# Proper prefix
set-option -g prefix C-a
bind C-a send-prefix

# Aggressive resize
setw -g aggressive-resize on

# Status bar
set -g status-left ' ❐ #S @ #{hostname} | ↑#{?uptime_d, #{uptime_d}d,}#{?uptime_h, #{uptime_h}h,}#{?uptime_m, #{uptime_m}m,} '
set -g status-right '#{paired}#{?battery_hbar, #{battery_bar},}#{?battery_percentage, #{battery_percentage},} '

set-window-option -g mode-keys vi

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

#  - ERROR: `escape-time` (500) is higher than 300ms                                                                                                                                                               
#    - ADVICE:                                                                                                                                                                                                     
#      - set escape-time in ~/.tmux.conf:                                                                                                                                                                          
#          set-option -sg escape-time 10                                                                                                                                                                           
#      - https://github.com/neovim/neovim/wiki/FAQ                                                                                                                                                                
set-option -sg escape-time 10                                                                                                                                                                           

# - WARNING: `focus-events` is not enabled. |'autoread'| may not work.
#   - ADVICE:
#     - (tmux 1.9+ only) Set `focus-events` in ~/.tmux.conf:
#         set-option -g focus-events on
set-option -g focus-events on

# - ERROR: $TERM should be "screen-256color" or "tmux-256color" in tmux. Colors might look wrong.
#   - ADVICE:
#     - Set default-terminal in ~/.tmux.conf:
#         set-option -g default-terminal "screen-256color"
#     - https://github.com/neovim/neovim/wiki/FAQ
set-option -g default-terminal "screen-256color"

#   - WARNING: Neither Tc nor RGB capability set. True colors are disabled. |'termguicolors'| won't work properly.
#     - ADVICE:
#       - Put this in your ~/.tmux.conf and replace XXX by your $TERM outside of tmux:
#           set-option -sa terminal-overrides ',XXX:RGB'
#       - For older tmux versions use this instead:
#           set-option -ga terminal-overrides ',XXX:Tc'
set-option -ga terminal-overrides ",screen-256color:Tc"

set -g mouse on

bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

# Open new things with the current path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# makes tmux send out the proper escape codes for setting the terminal title
set-option -g set-titles on
# sets the content of the title: user@host: /current/working/directory
set-option -g set-titles-string "#{session_name}"

set-option -g history-limit 100000

# to be able to use ctrl+arrow
set-window-option -g xterm-keys on

# This should stay near the bottom of this file
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'seebi/tmux-colors-solarized'
set -g @colors-solarized 'light'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
if-shell '~/.tmux/plugins/tpm/tpm' {
	bind-key S run-shell -b "/home/max/.tmux/plugins/tmux-fzf/scripts/session.sh attach"
} {
	bind-key S run-shell -b "/home/max/.tmux/plugins/tmux-fzf/scripts/session.sh attach"
}
